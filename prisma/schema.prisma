generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model usuarios {
  id                 Int               @id @default(autoincrement())
  matricula          String            @unique
  nome               String
  email              String            @unique
  senha              String
  admin              Boolean           @default(false)
  codigo_recuperacao String?
  nascimento_at      DateTime?
  created_at         DateTime          @default(now())
  updated_at         DateTime          @updatedAt

  duvidas            duvidas[]
  respostas          respostas[]
  linhas_recentes    linhas_recentes[]
  extrato_cartao     extrato_cartao[]
}

model itinerarios {
  id                 Int                 @id @default(autoincrement())
  linha              String
  descricao          String              @unique
  created_at         DateTime            @default(now())
  updated_at         DateTime            @updatedAt

  // Relacionamentos
  linhas_recentes    linhas_recentes[]
  historico_paradas  historico_paradas[]
  embarques          embarque[]
}

model linhas_recentes {
  id            Int        @id @default(autoincrement())
  itinerario_id Int
  usuario_id    Int
  obs           String?
  created_at    DateTime   @default(now())
  updated_at    DateTime   @updatedAt

  @@unique([itinerario_id, usuario_id])

  itinerario    itinerarios @relation(fields: [itinerario_id], references: [id])
  usuario       usuarios    @relation(fields: [usuario_id], references: [id])
}

model duvidas {
  id          Int        @id @default(autoincrement())
  usuario_id  Int
  mensagem    String
  fechado     Boolean     @default(false)
  created_at  DateTime    @default(now())
  updated_at  DateTime    @updatedAt

  usuario     usuarios    @relation(fields: [usuario_id], references: [id])
  respostas   respostas[]
}

model respostas {
  id          Int       @id @default(autoincrement())
  usuario_id  Int
  duvida_id   Int
  mensagem    String
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt

  usuario     usuarios  @relation(fields: [usuario_id], references: [id])
  duvida      duvidas   @relation(fields: [duvida_id], references: [id])
}

model extrato_cartao {
  id          Int       @id @default(autoincrement())
  usuario_id  Int
  valor       Float
  descricao   String
  saldo_atual Float
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt

  usuario     usuarios  @relation(fields: [usuario_id], references: [id])
}

model embarque {
  id                 Int                 @id @default(autoincrement())
  itinerario_id      Int
  data               DateTime
  sentido            String
  ponto              String
  localizacao        String
  created_at         DateTime            @default(now())
  updated_at         DateTime            @updatedAt

  itinerario         itinerarios         @relation(fields: [itinerario_id], references: [id])
  historico_paradas  historico_paradas[]
}

model historico_paradas {
  id            Int       @id @default(autoincrement())
  itinerario_id Int
  embarque_id   Int
  horario       DateTime
  status        String
  localizacao   String
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt

  itinerario    itinerarios @relation(fields: [itinerario_id], references: [id])
  embarque      embarque    @relation(fields: [embarque_id], references: [id])
}
